package comp.Game;


import comp.Game.GameArch;

import java.awt.BorderLayout;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Random;

import org.psnbtech.Game;
import org.psnbtech.WorldPanel;

import org.psnbtech.entity.Asteroid;
import org.psnbtech.entity.Entity;
import org.psnbtech.entity.Player;

import org.psnbtech.util.Clock;

public interface IGameImp 
{

	/*
	  Getter and Setter of architecture reference
	*/
    public void setArch (GameArch arch);
	public GameArch getArch();
	
	/*
  	  Myx Lifecycle Methods: these methods are called automatically by the framework
  	  as the bricks are created, attached, detached, and destroyed respectively.
	*/	
	public void init();	
	public void begin();
	public void end();
	public void destroy();

	/*
  	  Implementation primitives required by the architecture
	*/
  
    //To be imported: BorderLayout,KeyAdapter,KeyEvent,ArrayList,Iterator,LinkedList,List,Random,Game,WorldPanel,Asteroid,Entity,Player,Clock,GameArch
    public void startGame ()  ;        
    public void killPlayer ()  ;        
    public void resetGame ()  ;        
    public void resetEntityLists ()  ;        
    public boolean areEnemiesDead ()  ;        
    public boolean checkForRestart ()  ;        
    public void startGameExecution ()  ;        
    public void updateGame ()  ;        
    public void setArchData (GameArch _arch)  ;        
    public void registerEntity (Entity entity)  ;        
    public boolean isGameOver ()  ;        
    public boolean isPlayerInvulnerable ()  ;        
    public boolean canDrawPlayer ()  ;        
    public int getLevel ()  ;        
    public boolean isPaused ()  ;        
    public boolean isShowingLevel ()  ;        
    public Random getRandom ()  ;        
    public List<Entity> getEntities ()  ;        
    public Player getPlayer1 ()  ;        
    public Player getPlayer2 ()  ;        
}